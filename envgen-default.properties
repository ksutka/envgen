#currently, not used
#documents available options

#define the application domain
edu.ksu.cis.envgen.ApplInfo = edu.ksu.cis.envgen.applinfo.domain.DefaultDriverInfo

#define the type of interface to find
edu.ksu.cis.envgen.InterfaceFinder = edu.ksu.cis.envgen.applinfo.UnitInterfaceFinder

#define the type of acquiring assumptions (specs, static analysis)
edu.ksu.cis.envgen.AssumptionsAcquirer = edu.ksu.cis.envgen.spec.SpecReader

#define code generator, should work with the output of the defined assumptions acquirer
edu.ksu.cis.envgen.CodeGenerator = edu.ksu.cis.envgen.codegen.UniversalDriverGenerator

#Names of classes to be analyzed
unit = 

#load classes in these paths into the unit under analysis
unitPath =

#Analyze unit (instead of environment) and generate code based on the analysis
unitAnalysis = false

#Output directory, can help avoid overwriting original classes
outputDirName = 

#Package name for output classes, can help avoid overwriting original classes
packageName = env

#a list of packages to ignore modeling
ignoreModeling = java.lang

#Set to print out environment actions	
printActions = false
	
#Number of threads in the univ driver
numThreads = 2

#User specification file name
specFileName = 

#Modeling primitives class (Verify)
context = Verify

#Set to insert atomic steps into generated environment
atomicStepsMode = false

#Analyze class files (alt. java sources)
source = class

#options for static analysis

#a list of package to skip during analysis
ignoreAnalyzing = java.lang

#print analysis results into a file
printToFile =

#Integer field that keeps track of value k in k-limiting. The value can 
#be varied by the user. The larger the value, the more precise 
#information will be produced by the analyses. The default value 
#is 2 which lets the analysis identify side-effects to obejcts and their fields, and 
#fields of their fields.
chainLength = 2

#by default may analysis is performed, this option turns on the must analysis
mustAnalysis = false

returnSensitivity = false

ofaAnalysis = false

#Analyze effects on fields that are relevant to certain package behavior 
#(GUI, container) 
packageAnalysis = false

analysisPackageName = 

#Set to generate drivers using ifelse statements, by default switch statements are used.
#ifElseCodeCond = false

#Set to automatically generate a Single Event Condition 
#and to combine it with a given specification.  By default, this condition is checked 
#while traversing the buchi automaton. 
#singleEventCond = false




